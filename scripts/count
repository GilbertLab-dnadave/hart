#!/usr/bin/env bash

usage() {
  >&2 echo "Usage: $(basename $0) [-t threads ] [-w windowSize] bed1 [bed2 ... bedN ]"
  >&2 echo ""
  exit 1
}

while getopts ":t:w:m:" opt; do
  case $opt in
  m)
    MINSIZE=$OPTARG
   ;;
  t)
    NTHREADS=$OPTARG
   ;;
  w)
    WINSIZE=$OPTARG
   ;;
  \?)
   >&2 echo "Invalid option: -$OPTARG"
   usage
   ;;
  [?])
   usage
   ;;
  :)
   >&2 echo "Option -$OPTARG requires an argument."
   >&2 echo ""
   usage
   ;;
  esac
done

if [ -z $WINSIZE ]; then
  WINSIZE=5000
fi

if [ -z $MINSIZE ]; then
  MINSIZE=10000000
fi

if [ -z $NTHREADS ]; then
  if [ -z $NUMTHREADS ]; then
    NTHREADS=1
  else
    NTHREADS=$NUMTHREADS
  fi
fi

shift $((OPTIND-1))

if [[ -z $@ ]]; then
  INPUT=$(cat /dev/stdin)
else
  INPUT=$@
fi

count(){
  INPUT=$1
  WINSIZE=$2
  MINSIZE=$3
  
  # check if file exists
  if [[ ! -f $INPUT ]]; then >&2 echo "file \"$INPUT\" not found"; exit 1; fi
  
  # check input is a bed
  if [[ $INPUT != *.bam ]]; then >&2 echo "input is not a bam file"; exit 1; fi
  
  BASE="$(basename $INPUT | sed 's/\.bam$//g')"
  OUTPUT=${BASE}_w${WINSIZE}.bg
  
  SCALE=$(echo "1000000/$(samtools view -c $INPUT)" | bc -l)
  
  samtools view -H $INPUT | grep "^@SQ" | tr ':' '\t' | cut -f 3,5 | \
  awk -v minsize=$MINSIZE '$2>minsize' OFS='\t' | \
  bedtools makewindows -w $WINSIZE -g /dev/stdin | \
  bedtools coverage -counts -sorted -c -a stdin -b $INPUT | \
  awk -v scale=$SCALE '{print $1,$2,$3,$4*1000*(scale/($3-$2)) }' OFS='\t' > $OUTPUT
  
  echo $OUTPUT
}

export -f count

parallel --no-notice -k -j $NTHREADS "count {} $WINSIZE $MINSIZE" ::: $INPUT
